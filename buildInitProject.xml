<?xml version="1.0"?>
<project name="ProjectInitializer" default="" basedir=".">

	<path id="bda.classpath">
		<fileset dir="${SAGHome}/common/lib" includes="**/*.jar" />
		<fileset dir="${SAGHome}/common/lib/ext" includes="**/*.jar" />
		<fileset dir="${SAGHome}/IntegrationServer/lib" includes="wm-isserver.jar" />
		<fileset dir="${SAGHome}/IntegrationServer/lib/jars" includes="**/*.jar" />
		<fileset dir="./lib" includes="**/*.jar" />
	</path>

	<property file="System.properties" />


	<!-- system properties properties -->
	<target name="bda.init.SAGHome" unless="SAGHome">
		<fail message="System property 'SAGHome' should be defined!" />
	</target>

	<target name="bda.init.DeployerInstallationPath" unless="config.deployer.deployerInstallationPath">
		<fail message="System property 'config.deployer.deployerInstallationPath' should be defined!" />
	</target>

	<target name="bda.init.DeployerHost" unless="config.deployer.deployerHost">
		<fail message="System property 'config.deployer.deployerHost' should be defined!" />
	</target>

	<target name="bda.init.DeployerPort" unless="config.deployer.deployerPort">
		<fail message="System property 'config.deployer.deployerPort' should be defined!" />
	</target>

	<target name="bda.init.DeployerUsername" unless="config.deployer.deployerUsername">
		<fail message="System property 'config.deployer.deployerUsername' should be defined!" />
	</target>

	<target name="bda.init.DeployerPassword" unless="config.deployer.deployerPassword">
		<fail message="System property 'config.deployer.deployerPassword' should be defined!" />
	</target>

	<!-- mandatory properties -->
	<target name="bda.init.ProjcetName" unless="bda.projectName">
		<fail message="Property 'bda.projectName' should be defined!" />
	</target>

	<target name="bda.init.buildStorageDirr" unless="config.build.buildStorageDir">
		<fail message="Property 'config.build.buildStorageDir' should be defined!" />
	</target>

	<!-- optional properties -->
	<target name="bda.init.ISProjectsDir" unless="isProjectsDir">
		<property name="isProjectsDir" value="" />
	</target>

	<target name="bda.init.ISConfigDir" unless="isConfigDir">
		<property name="isConfigDir" value="" />
	</target>

	<target name="bda.init.BPMProjectsDir" unless="bpmProjectsDir">
		<property name="bpmProjectsDir" value="" />
	</target>

	<target name="bda.init.MWSProjectsDir" unless="mwsProjectsDir">
		<property name="mwsProjectsDir" value="" />
	</target>

	<target name="bda.init.RulesProjectsDir" unless="rulesProjectsDir">
		<property name="rulesProjectsDir" value="" />
	</target>

	<target name="bda.init.UMProjectDir" unless="umProjectsDir">
		<property name="umProjectsDir" value="" />
	</target>

	<target name="bda.init.TestPackageNamePattern" unless="testPackageNamePattern">
		<property name="testPackageNamePattern" value="" />
	</target>


	<target name="bda.init.JenkinsReportDir" unless="jenkinsReportDir">
		<property name="jenkinsReportDir" value="" />
	</target>


	<!--Main Init targets-->
	<target name="bda.init.SystemProperties" depends="bda.init.SAGHome,bda.init.DeployerInstallationPath,bda.init.DeployerHost,bda.init.DeployerPort,bda.init.DeployerUsername,bda.init.DeployerPassword">
	</target>

	<target name="bda.init.MandatoryProperties" depends="bda.init.ProjcetName,bda.init.buildStorageDirr">
	</target>

	<target name="bda.init.OptionalProperties" depends="bda.init.ISProjectsDir,bda.init.ISConfigDir,bda.init.BPMProjectsDir,bda.init.MWSProjectsDir,bda.init.RulesProjectsDir,bda.init.UMProjectDir,bda.init.TestPackageNamePattern,bda.init.JenkinsReportDir">
	</target>

	<target name="bda.init.Project" depends="bda.init.SystemProperties,bda.init.MandatoryProperties,bda.init.OptionalProperties" description="bda.init. properties needed for the project">
		<property name="bda.logging.log4j.propertiesFile" location="./resources/log4j.properties" />
		<taskdef name="log" classname="com.sag.wm.ant.tasks.is.util.TALogger" classpathref="bda.classpath" />

		<taskdef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpathref="bda.classpath" />
		<taskdef name="groovy" classname="org.codehaus.groovy.ant.Groovy" classpathref="bda.classpath" />

		<antcall target="common.create_dir">
			<param name="dir" value="${config.tmpdir}" />
		</antcall>

		<property name="baseRevision" value="${config.build.version}.${env.BUILD_NUMBER}" />
		<!-- build.version is for ABE, see "master_build_Reference/build.properties" -->
		<property name="build.version" value="${bda.projectName}_${config.build.version}" />
		<!-- build_number is for ABE, see "${SAG_HOME}/common/AssetBuildEnvironment/build.number" -->
		<property name="build_number" value="${env.BUILD_NUMBER}"/>
		
		<property name="fbrRepoName" value="${bda.projectName}_${baseRevision}_fbrRepo"/>
		<property name="buildOutputDir" location="${config.build.buildStorageDir}/${fbrRepoName}"/>

	</target>

	<target name="common.create_dir" depends="common.check">
		<if>
			<equals arg1="${overwrite}" arg2="true" />
			<then>
				<antcall target="common.deldir">
					<param name="dir" value="${dir}" />
				</antcall>
			</then>
		</if>
		<log level="INFO" msg="Creating dir '${dir}'" />
		<mkdir dir="${dir}" />
	</target>


	<target name="common.check">
		<log msg="Checking for the existance of the directory ${dir}" level="DEBUG" />
		<condition property="direxists">
			<available file="${dir}" type="dir" />
		</condition>
	</target>

	<target name="common.deldir" depends="common.check" if="direxists">
		<log msg="Deleting the directory ${dir}" level="TRACE" />
		<delete dir="${dir}" />
	</target>


	<target name="common.checkos">
		<condition property="testrunner.cmd" value="${soapUI.home}/bin/testrunner.bat">
			<os family="windows" />
		</condition>
		<condition property="testrunner.cmd" value="${soapUI.home}/bin/testrunner.sh">
			<os family="unix" />
		</condition>
	</target>

	<target name="common.createLogDir">
		<!-- create the common log dir -->
		<mkdir dir="${bda.logging.dir}" />
	</target>


</project>
