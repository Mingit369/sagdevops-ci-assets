<?xml version="1.0"?>
<project name="test" default="bda.test.startTest" basedir=".">

	<path id="junitClasspath">
		<fileset dir="${SAGHome}/common/lib/ext" includes="enttoolkit.jar" />
		<fileset dir="${SAGHome}/common/lib" includes="**/gf.javax.mail.jar" />
		<fileset dir="${SAGHome}/common/lib" includes="wm-isclient.jar" />
		<fileset dir="${SAGHome}/IntegrationServer/lib" includes="wm-isserver.jar" />
		<fileset dir="./lib" includes="httpunit.jar" />
		<fileset dir="./lib" includes="junit*.jar" />
		<fileset dir="./lib" includes="xmlunit*.jar" />
		<fileset dir="./lib" includes="serviceInterceptor.jar" />
		<fileset dir="./lib" includes="*junit.jar" />
		<fileset dir="./lib" includes="**/*.jar" />
	</path>

	<!-- explicit taskdef is necessary if the ant-junit.jar is not in the ANT_HOME/lib dir -->
	<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
		  <classpath refid="junitClasspath"/>
	</taskdef>
	<taskdef name="junitreport" classname="org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator">
		  <classpath refid="junitClasspath"/>
	</taskdef>

	<target name="bda.test.startTest" depends="bda.test.jenkinsCheck">		
		<var name="failedTestList" value=""/>
		
        <!-- interate over the test project and triiger all xml tests in the setup folder -->
		<for param="testProject" keepgoing="true" trim="true">
			<path>
				<dirset dir="${isTestDir}" includes="*" excludes=".*,replicate" />
			</path>
			<sequential>
				<trycatch reference="exception_ref">
					<try>
                        <echo message="@{testProject}"/>
						<antcall target="bda.test.executeTestAndReportXMLForNodes">
							<param name="testPackageName" value="@{testProject}" />
						</antcall>
					</try>
					<catch>
						<property name="testFail" refid="exception_ref" />
						<echo message="JUnit test for package '@{testProject}' failed: ${testFail}" />
						<var name="failedTestList" value="${failedTestList}'@{packageName}', " />
					</catch>
				</trycatch>
			</sequential>
		</for>
		<if>
			<not>
				<equals arg1="${failedTestList}" arg2="" trim="true" />
			</not>
			<then>
				<fail unless="isReportingToJenkins" message="At least one test failed. Failed packages: ${failedTestList}" />
				<log msg="At least one test failed. Failed packages: ${failedTestList}. Not failing script execution so that Jenkins can report results." level="ERROR"/>
			</then>
			<else>
				<echo message="All JUnit Tests passed."/>
			</else>
		</if>
	</target>

	<target name="bda.test.initTestPacakge">
		<echo message="Init JUnit tests for package ${testPackageName}" />		
		<property name="testPackageReportsDir" value="${testPackageName}/resources/reports" />
	</target>
	
	<target name="bda.test.cleanUpTestPackage">
		<delete dir="${testPackageReportsDir}" />								
	</target>
	

	<!--execute only if the XML Test directory exists in the test package -->
	<target name="bda.test.executeTestAndReportXML" depends="bda.test.initTestPacakge, bda.test.cleanUpTestPackage">
		<echo message="> Starting JUnit tests for package '${testPackageName}' on server '${user}:****@${host}:${port}'"/>
		
		<mkdir dir="${testPackageReportsDir}" />

		<property name="resourcesFolder" value="${testPackageName}/resources" />
		
		<for param="testSetupFile" keepgoing="true">
			<path>
				<!--fileset dir="${testPackageXmlDir}" includes="*.xml" /-->
				<fileset dir="${testPackageName}" includes="**/setup/*.xml" />
			</path>
			<sequential>
				<basename property="fileBasename" file="@{testSetupFile}" suffix=".xml" />
				<echo message="Running JUnit test '@{testSetupFile}'"/>
				<junit printsummary="yes" haltonfailure="no" fork="true" failureproperty="test:failure" showoutput="true" dir="${testPackageName}">
					<jvmarg value="-DwebMethods.integrationServer.name=${host}" />
					<jvmarg value="-DwebMethods.integrationServer.port=${port}" />
					<jvmarg value="-DwebMethods.integrationServer.userid=${user}" />
					<jvmarg value="-DwebMethods.integrationServer.password=${pwd}" />
					<jvmarg value="-DwebMethods.test.setup.filename=@{testSetupFile}" />
					<!--jvmarg value="-Dresources.folder=${resourcesFolder}" /-->
					<classpath>
						<path refid="junitClasspath" />
					</classpath>
					<formatter type="xml" />
					<test name="com.wm.ps.test.WmTestSuite" outfile="TEST-${fileBasename}" haltonerror="false" haltonfailure="false" todir="${testPackageReportsDir}" />
				</junit>
				<replaceregexp file="${testPackageReportsDir}/TEST-${fileBasename}.xml" match=" name=&quot;com.wm.ps.test.WmTestSuite&quot; " replace=" name=&quot;com.wm.ps.test.WmTestSuite [${fileBasename}]&quot; " />												
				<var name="fileBasename" unset="true" />
			</sequential>
		</for>

		
		<!-- if jenkins report dir is set publicate results there-->
		<antcall target="bda.test.copyResultsToReportsDir">
			<param name="current.report.dir" value="${testPackageReportsDir}" />
		</antcall>
		
		
		<!-- create HTML report of the test results -->
		<junitreport todir="${testPackageReportsDir}">
			<fileset dir="${testPackageReportsDir}">
				<include name="TEST-*.xml" />
				<exclude name="TESTS-TestSuites.xml" />
			</fileset>
			<report format="frames" todir="${testPackageReportsDir}/html" />
		</junitreport>

		<fail if="test:failure">Unit test failure</fail>
	</target>


	<!-- if jenkins report dir is set publicate results there-->
	<target name="bda.test.copyResultsToReportsDir" depends="bda.test.jenkinsCheck" if="isReportingToJenkins">
		<echo message="Copying JUnit test results to folder '${jenkinsReportDir}'"/>
		<copy todir="${jenkinsReportDir}">
			<fileset dir="${current.report.dir}">
				<include name="*.*" />
				<exclude name="TESTS-TestSuites.xml"/>
			</fileset>
		</copy>
	</target>
	
	<!-- will jenkins evaluate the test results -->
	<target name="bda.test.jenkinsCheck" >
		<echo message="-- jenkins report dir: ${jenkinsReportDir}"/>
		 <condition property="isReportingToJenkins">
		 	<not>
            	<equals arg1="${jenkinsReportDir}" arg2="" trim="true"/>
	 		</not>	
	     </condition>
	</target>
	
	<target name="bda.test.executeTestAndReportXMLForNodes">
		<groovy>
			def configSlurper = new ConfigSlurper(properties.'bda.targetEnv')
			configSlurper.classLoader = this.class.getClassLoader()
			def config = configSlurper.parse(new File(properties.'environmentsDefinition').toURL())
			if(config.IntegrationServers.size() > 0 ) {
				config.IntegrationServers.each { name, isConfig ->
					def host = isConfig.host
                    def port = isConfig.port
					def user = isConfig.username
					def pwd = isConfig.pwd
		
					def ac = project.createTask("antcall");
					ac.setTarget("bda.test.executeTestAndReportXML");
		            def acparam1 = ac.createParam();
                    acparam1.setName("host");
                    acparam1.setValue(host);
                    def acparam2 = ac.createParam();
                    acparam2.setName("port");
                    acparam2.setValue(port);
					def acparam3 = ac.createParam();
                    acparam3.setName("user");
                    acparam3.setValue(user);
		            def acparam4 = ac.createParam();
		            acparam4.setName("pwd");
		            acparam4.setValue(pwd);
		            def acparam5 = ac.createParam();
		            acparam5.setName("testPackageName");
		            acparam5.setValue(properties.'testPackageName');
		            ac.execute();
				}
			}
		</groovy>
	</target>
	
</project>
